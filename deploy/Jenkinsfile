import hudson.model.*

pipeline {
 agent any
         parameters{

        choice(name: "action", choices: 'create\ndestroy\ndestroyekscluster', description: 'Create/Update or destroy the eks cluster')
        string(name:'cluster', defaultValue: 'demo-cluster', description: 'Eks cluster name')
        string(name:'region', defaultValue: 'us-east-1', description: 'Eks cluster region')
         }

        environment{


        ACCESS_KEY = credentials('aws_access_key_id')
        SECRET_KEY = credentials('aws_secret_access_key')
        

        }

stages{

        stage ("Git Checkout"){
            steps {

                git branch: 'main', url: 'https://github.com/CaptainDemir/demo-app2.git'
            
            }

        }


        stage ("eks connect"){
            steps {

                sh 'aws configure set aws_access_key_id $ACCESS_KEY '
                
               sh 'aws configure set aws_secret_access_key $SECRET_KEY'
               sh 'aws configure set region "" '
               sh 'aws eks update-kubeconfig --name demo-cluster --region us-east-1 '
                  
            
                
               
                

              
                
            
            }

        }


        stage ('eks deployment'){
            when { expression { params.action == 'create'} }

            steps {
                
                

                script {
                   
                   def apply = false
                   try {

                       input message: 'please confirm the apply to initiate the deployments', ok: ' Ready to apply the config'
                       apply = true

                   }

                   catch(err){
                     apply = false
                     CurrentBuild.result= 'UNSTABLE'
                     
                    }
                    if(apply){
                        
                        sh """ microk8s kubectl apply -f . """;
                    }


               }
            
            }

        }

 

}
}